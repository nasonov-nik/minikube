kind: Deployment
apiVersion: apps/v1
metadata:
  name: ingress-test-namespace
  namespace: test-namespace
  labels:
    app: istio
    istio: ingress-test-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: istio
      istio: ingress-test-namespace
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: istio
        istio: ingress-test-namespace
        istio.io/rev: default
        release: istio
        service.istio.io/canonical-revision: latest
        sidecar.istio.io/inject: 'false'
      annotations:
        prometheus.io/path: /stats/prometheus
        prometheus.io/port: '15020'
        prometheus.io/scrape: 'true'
        sidecar.istio.io/inject: 'false'
    spec:
      volumes:
        - name: workload-socket
          emptyDir: {}
        - name: credential-socket
          emptyDir: {}
        - name: workload-certs
          emptyDir: {}
        - name: istiod-ca-cert
          configMap:
            name: istio-ca-root-cert
            defaultMode: 420
        - name: podinfo
          downwardAPI:
            items:
              - path: labels
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels
              - path: annotations
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations
            defaultMode: 420
        - name: istio-envoy
          emptyDir: {}
        - name: istio-data
          emptyDir: {}
        - name: istio-token
          projected:
            sources:
              - serviceAccountToken:
                  audience: istio-ca
                  expirationSeconds: 43200
                  path: istio-token
            defaultMode: 420
        - name: config-volume
          configMap:
            name: istio-test-namespace
            defaultMode: 420
            optional: true
        - name: ingressgateway-certs
          secret:
            secretName: istio-ingressgateway-certs
            defaultMode: 420
            optional: true
        - name: ingressgateway-ca-certs
          secret:
            secretName: istio-ingressgateway-ca-certs
            defaultMode: 420
            optional: true
      containers:
        - name: istio-proxy
          image: docker.io/istio/proxyv2:1.16.1
          args:
            - proxy
            - router
            - '--domain'
            - $(POD_NAMESPACE).svc.cluster.local
            - '--proxyLogLevel=warning'
            - '--proxyComponentLogLevel=misc:error'
            - '--log_output_level=default:info'
          ports:
            - containerPort: 15021
              protocol: TCP
            - containerPort: 8080
              protocol: TCP
            - name: http-envoy-prom
              containerPort: 15090
              protocol: TCP
            - containerPort: 15443
              protocol: TCP
          env:
            - name: JWT_POLICY
              value: third-party-jwt
            - name: PILOT_CERT_PROVIDER
              value: istiod
            - name: CA_ADDR
              value: istiod.istio-system.svc:15012
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.serviceAccountName
            - name: ISTIO_META_WORKLOAD_NAME
              value: istio-ingressgateway
            - name: ISTIO_META_OWNER
              value: >-
                kubernetes://apis/apps/v1/namespaces/test-namespace/deployments/ingress-test-namespace
            - name: ISTIO_META_MESH_ID
              value: cluster.local
            - name: TRUST_DOMAIN
              value: cluster.local
            - name: ISTIO_META_UNPRIVILEGED_POD
              value: 'true'
            - name: ISTIO_META_CLUSTER_ID
              value: Kubernetes
          resources:
            limits:
              cpu: '1'
              memory: 500Mi
            requests:
              cpu: 10m
              memory: 40Mi
          volumeMounts:
            - name: workload-socket
              mountPath: /var/run/secrets/workload-spiffe-uds
            - name: credential-socket
              mountPath: /var/run/secrets/credential-uds
            - name: workload-certs
              mountPath: /var/run/secrets/workload-spiffe-credentials
            - name: istio-envoy
              mountPath: /etc/istio/proxy
            - name: config-volume
              mountPath: /etc/istio/config
            - name: istiod-ca-cert
              mountPath: /var/run/secrets/istio
            - name: istio-token
              readOnly: true
              mountPath: /var/run/secrets/tokens
            - name: istio-data
              mountPath: /var/lib/istio/data
            - name: podinfo
              mountPath: /etc/istio/pod
            - name: ingressgateway-certs
              readOnly: true
              mountPath: /etc/istio/ingressgateway-certs
            - name: ingressgateway-ca-certs
              readOnly: true
              mountPath: /etc/istio/ingressgateway-ca-certs
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 15021
              scheme: HTTP
            initialDelaySeconds: 1
            timeoutSeconds: 1
            periodSeconds: 2
            successThreshold: 1
            failureThreshold: 30
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext:
        runAsUser: 1337
        runAsGroup: 1337
        runAsNonRoot: true
        fsGroup: 1337
      affinity:
        nodeAffinity: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 100%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
